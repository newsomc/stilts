engine: sqlite

--- tracksTitle: unit -> (int * string) fold

select id, titlesearch from tracks
where tracks.audio = 1 and tracks.titlesearch is not null 

--- tracksTitleAlbum: unit -> (int * string) fold

select tracks.id, tracks.titlesearch || " " || ifnull(albums.titlesearch, "") as ta
from tracks
left join albums on tracks.album = albums.id
where tracks.audio = 1 and tracks.titlesearch is not null 

--- tracksTitleArtist: unit -> (int * string) fold

select tracks.id, tracks.titlesearch || " " ||
                         ifnull(group_concat(contributors.namesearch, " "), "") as ta
from tracks
left outer join contributor_track ct on (ct.track = tracks.id and ct.role in (1, 5, 6))
left outer join contributors on contributors.id = ct.contributor
where tracks.audio = 1 and tracks.titlesearch is not null 
group by tracks.id

--- tracksTitleAlbumArtist: unit -> (int * string) fold

select tracks.id, tracks.titlesearch || " " ||
                         ifnull(albums.titlesearch, "") || " " ||
                         ifnull(group_concat(contributors.namesearch, " "), "") as ta
from tracks
left outer join contributor_track ct on (ct.track = tracks.id and ct.role in (1, 5, 6))
left outer join contributors on contributors.id = ct.contributor
left outer join albums on tracks.album = albums.id
where tracks.audio = 1 and tracks.titlesearch is not null 
group by tracks.id

--- artists: unit -> (int * string) fold

select distinct id, namesearch from contributors
left join contributor_album ca on (ca.contributor = contributors.id)
where ca.role in (1, 5, 6)

--- albums: unit -> (int * string) fold

select id, titlesearch from albums
where titlesearch is not null

--- albumsArtist: unit -> (int * string) fold

select albums.id, albums.titlesearch || " " || contributors.namesearch ta
from albums
left join contributors on contributors.id = albums.contributor
where albums.contributor is not null and albums.titlesearch is not null


